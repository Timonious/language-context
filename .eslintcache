[{"C:\\Users\\IdeaPad\\WebstormProjects\\frontend-react-language-context\\src\\index.js":"1","C:\\Users\\IdeaPad\\WebstormProjects\\frontend-react-language-context\\src\\App.js":"2","C:\\Users\\IdeaPad\\WebstormProjects\\frontend-react-language-context\\src\\reportWebVitals.js":"3","C:\\Users\\IdeaPad\\WebstormProjects\\frontend-react-language-context\\src\\pages\\home\\Home.js":"4","C:\\Users\\IdeaPad\\WebstormProjects\\frontend-react-language-context\\src\\components\\header\\Header.js":"5","C:\\Users\\IdeaPad\\WebstormProjects\\frontend-react-language-context\\src\\pages\\allPlants\\AllPlants.js":"6","C:\\Users\\IdeaPad\\WebstormProjects\\frontend-react-language-context\\src\\pages\\aboutUs\\AboutUs.js":"7","C:\\Users\\IdeaPad\\WebstormProjects\\frontend-react-language-context\\src\\context\\LanguageContextProvider.js":"8","C:\\Users\\IdeaPad\\WebstormProjects\\frontend-react-language-context\\src\\components\\LanguageSwitch.js":"9"},{"size":645,"mtime":1617900605020,"results":"10","hashOfConfig":"11"},{"size":700,"mtime":1617904291576,"results":"12","hashOfConfig":"11"},{"size":375,"mtime":1617898152737,"results":"13","hashOfConfig":"11"},{"size":450,"mtime":1617904291602,"results":"14","hashOfConfig":"11"},{"size":1320,"mtime":1617905430931,"results":"15","hashOfConfig":"11"},{"size":566,"mtime":1617904291751,"results":"16","hashOfConfig":"11"},{"size":596,"mtime":1617904291813,"results":"17","hashOfConfig":"11"},{"size":632,"mtime":1617903966194,"results":"18","hashOfConfig":"11"},{"size":558,"mtime":1617907980199,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17bzb1x",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\IdeaPad\\WebstormProjects\\frontend-react-language-context\\src\\index.js",[],"C:\\Users\\IdeaPad\\WebstormProjects\\frontend-react-language-context\\src\\App.js",[],"C:\\Users\\IdeaPad\\WebstormProjects\\frontend-react-language-context\\src\\reportWebVitals.js",[],"C:\\Users\\IdeaPad\\WebstormProjects\\frontend-react-language-context\\src\\pages\\home\\Home.js",[],["40","41"],"C:\\Users\\IdeaPad\\WebstormProjects\\frontend-react-language-context\\src\\components\\header\\Header.js",["42"],"C:\\Users\\IdeaPad\\WebstormProjects\\frontend-react-language-context\\src\\pages\\allPlants\\AllPlants.js",[],"C:\\Users\\IdeaPad\\WebstormProjects\\frontend-react-language-context\\src\\pages\\aboutUs\\AboutUs.js",[],"C:\\Users\\IdeaPad\\WebstormProjects\\frontend-react-language-context\\src\\context\\LanguageContextProvider.js",["43"],"import React, { createContext, useState } from 'react'\r\n\r\nexport const LanguageContext = createContext('')\r\n\r\nfunction LanguageContextProvider({children}) {\r\n    const [language, toggleLanguage] = useState('nl'),\r\n toggleLang = () => {\r\n        if (language === 'nl') {\r\n            toggleLanguage('es');\r\n        }\r\n        else {\r\n            toggleLanguage('nl');\r\n        }\r\n }\r\n return (\r\n     <LanguageContext.Provider value={{toggleLang,\r\n         languageSwitcher:language === 'nl' ? 'nl' : 'es',\r\n     }}>\r\n         {children}\r\n     </LanguageContext.Provider>\r\n )\r\n}\r\n\r\nexport default LanguageContextProvider;\r\n","C:\\Users\\IdeaPad\\WebstormProjects\\frontend-react-language-context\\src\\components\\LanguageSwitch.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":33,"column":11,"nodeType":"50","endLine":33,"endColumn":87},{"ruleId":"51","severity":1,"message":"52","line":7,"column":2,"nodeType":"53","messageId":"54","endLine":7,"endColumn":12},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'toggleLang' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]